{"version":3,"sources":["data/posts.js","redux/reducer.js","Components/Photo.js","Components/PhotoWall.js","Components/AddPhoto.js","Components/Comments.js","Components/Single.js","Components/Main.js","database/config.js","redux/actions.js","Components/App.js","index.js"],"names":["posts","rootReducer","combineReducers","state","arguments","length","undefined","_posts","action","type","concat","Object","toConsumableArray","slice","index","post","comments","postId","objectSpread","defineProperty","comment","Photo","props","react_default","a","createElement","className","es","to","id","src","imageLink","alt","description","onClick","startRemovingPost","history","push","PhotoWall","sort","x","y","map","Components_Photo","assign","key","AddPhoto","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","event","preventDefault","target","elements","link","value","Number","Date","startAddingPost","onHistory","onSubmit","placeholder","name","Component","Comments","startAddingComment","hidden","Single","_this$props","match","params","find","findIndex","loading","Components_Comments","Main","_this2","startLoadingPost","then","setState","startLoadingComment","_this3","exact","path","render","Components_PhotoWall","_ref","Components_AddPhoto","Components_Single","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","dispatch","ref","update","addPost","catch","error","console","log","once","snapshot","forEach","childSnapshot","val","loadPosts","remove","removePost","addComment","values","loadComments","App","withRouter","connect","bindActionCreators","actions","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","react_redux_es","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.b4618478.chunk.js","sourcesContent":["const posts = []\n\nexport default posts","import _posts from '../data/posts'\nimport {combineReducers} from 'redux'\n\nfunction comments(state={}, action) {\n    switch (action.type) {\n        case 'ADD_COMMENT':  \n        \n        if (!state[action.postId]) {\n            return {...state, [action.postId]: [action.comment]}\n        } else {\n            return {...state, [action.postId]: [...state[action.postId], action.comment] }\n        }\n\n        case 'LOAD_COMMENTS': return action.comments\n        \n        default: return state\n    }\n}\n\nfunction posts(state = _posts, action) {\n    switch (action.type) {\n        case 'REMOVE_POST': return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\n        case 'ADD_POST': return [...state, action.post]\n        case 'LOAD_POSTS': return action.posts\n        default: return state\n    }\n}\n\nconst rootReducer = combineReducers({posts, comments})\n\nexport default rootReducer","import React from 'react';\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nfunction Photo(props) {\n    const post = props.post\n    return <figure className=\"figure\"> \n                <Link to={`/single/${post.id}`}> <img className= \"photo\" src={post.imageLink} alt={post.description}/></Link>\n                <figcaption> <p> {post.description} </p> </figcaption>\n                <div className = \"button-container\">\n                <button onClick = {() => {\n                    props.startRemovingPost(props.index, post.id)\n                    props.history.push('/')\n                }}> Remove </button>\n                <Link className=\"button\" to={`/single/${post.id}`}> \n                    <div className=\"comment-count\"> \n                        <div className=\"speech-bubble\"> </div>\n                        {props.comments[post.id] ? props.comments[post.id].length : 0 }\n                    </div>\n                </Link>\n                </div>\n         </figure>\n}\n\n\nPhoto.propTypes = {\n    post: PropTypes.object.isRequired,\n}\n\n\nexport default Photo\n","import React from 'react'\nimport Photo from './Photo'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n//anchor tag, href attribute\nfunction PhotoWall(props) {\nreturn  <div> \n             <Link className = \"addIcon\" to=\"/AddPhoto\"> </Link> \n             <div className=\"photoGrid\" >\n                  {props.posts\n                    .sort(function(x,y) {\n                        return  y.id - x.id\n                    })\n                    .map((post, index) => <Photo key={index} post={post} {...props} index={index}/>)}\n             </div>\n        </div>\n}\n\nPhotoWall.propTypes = {\n    posts: PropTypes.array.isRequired,\n}\n\n\n export default PhotoWall","import React, {Component} from 'react'\n\nclass AddPhoto extends Component {\n\n    constructor() {\n        super()\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    handleSubmit(event) {\n        event.preventDefault();\n        const imageLink = event.target.elements.link.value\n        const description = event.target.elements.description.value\n        const post = {\n            id: Number(new Date()),\n            description: description,\n            imageLink: imageLink\n        }\n        if (description && imageLink){\n            this.props.startAddingPost(post)\n            this.props.onHistory.push('/')\n        }\n\n    }\n\n    render() {\n        return (\n    <div>\n        <div className=\"form\">\n          <form onSubmit={this.handleSubmit}> \n               <input type =\"text\" placeholder=\"Link\" name=\"link\"/>\n               <input type =\"text\" placeholder=\"Desciption\" name=\"description\"/>\n               <button> Post </button>\n          </form>\n        </div>\n    </div>\n    )\n    }\n}\n\n\n\nexport default AddPhoto","import React, {Component} from 'react'\n\n\nclass Comments extends Component {\n\n    constructor() {\n        super()\n        this.handleSubmit = this.handleSubmit.bind(this)\n    }\n    handleSubmit(event) {\n        event.preventDefault()\n        const comment = event.target.elements.comment.value\n        this.props.startAddingComment(comment, this.props)\n        event.target.elements.comment.value = ''\n    }\n\n    render() {\n       return <div className=\"comment\">\n       {\n           this.props.comments.map((comment, index) => {\n               return (\n                   <p key={index}> {comment} </p>\n               )\n           })\n\n       }\n            <form className=\"comment-form\" onSubmit={this.handleSubmit}> \n                <input type=\"text\" placeholder=\"comment\" name=\"comment\"/>\n                <input type=\"submit\" hidden/>\n            </form>\n            \n            \n         </div>\n    }\n}\n\nexport default Comments","import React, {Component} from 'react'\nimport Photo from './Photo'\nimport Comments from './Comments'\n\nclass Single extends Component {\n    render() {\n        const {match, posts} = this.props\n        const id = Number(match.params.id)\n        const post = posts.find((post) => post.id === id)\n        const comments = this.props.comments[match.params.id] || []\n        const index = this.props.posts.findIndex((post) => post.id === id)\n        if(this.props.loading === true) {\n            return <div className=\"loader\" >...loading </div>\n        } else  if(post){\n            return <div className='single-photo'>\n                    <Photo post={post} {...this.props} index={index}/>\n                    <Comments startAddingComment={this.props.startAddingComment} comments={comments} id = {id}/>\n            </div> \n        } else {\n            return <h1>...no post found</h1>\n        }\n          \n    } \n}\n\nexport default Single","import React, {Component} from 'react'\nimport PhotoWall from './PhotoWall'\nimport AddPhoto from './AddPhoto'\nimport {Route, Link} from 'react-router-dom'\nimport Single from './Single'\n\nclass Main extends Component {\n\n    state = {loading: true}\n\n    componentDidMount() {\n        this.props.startLoadingPost().then(() => {\n            this.setState({loading: false})\n        })\n        this.props.startLoadingComment()\n    }\n\n    render() {\n        return ( \n        \n        <div>\n            <h1> \n                <Link to=\"/\"> Illusion Wall </Link>    \n             </h1>\n            <Route exact path = \"/\" render={() => (\n                 <div>\n                      <PhotoWall {...this.props} />   \n                 </div>\n\n            )}/> \n\n            <Route path= \"/AddPhoto\" render = {({history}) => (\n                <AddPhoto {...this.props} onHistory={history}/>\n            )}/>\n\n            <Route path=\"/single/:id\" render = {(params) => (\n                <Single loading={this.state.loading} {...this.props} {...params}/> \n            )}/>\n         </div>\n        )\n    }\n\n}\n\n\nexport default Main","import * as firebase from 'firebase'\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyD6d0Uyx-VaTmULxJonRO5R2dajV5pYLQU\",\r\n    authDomain: \"photowall-project.firebaseapp.com\",\r\n    databaseURL: \"https://photowall-project.firebaseio.com\",\r\n    projectId: \"photowall-project\",\r\n    storageBucket: \"photowall-project.appspot.com\",\r\n    messagingSenderId: \"243425047992\",\r\n    appId: \"1:243425047992:web:f247b77ab57a0fcd\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n\r\n  const database = firebase.database()\r\n\r\n  export {database}","import {database} from '../database/config'\nexport function startAddingPost(post) {\n    return (dispatch) => {\n        return database.ref('posts').update({[post.id]: post}).then(() => {\n            dispatch(addPost(post))\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n}\n\nexport function startLoadingPost() {\n    return (dispatch) => {\n        return database.ref('posts').once('value').then((snapshot) => {\n            let posts = [];\n            snapshot.forEach((childSnapshot) => {\n                posts.push(childSnapshot.val());\n            })\n            dispatch(loadPosts(posts))\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n}\n\nexport function startRemovingPost(index, id) {\n    return (dispatch) => {\n        return database.ref(`posts/${id}`).remove().then(() => {\n            dispatch(removePost(index))\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n}\n\nexport function startAddingComment(comment, postId) {\n    return (dispatch) => {\n        return database.ref(`comments/${postId}`).push(comment).then(() => {\n            dispatch(addComment(comment, postId));\n        }).catch((error) => {\n            console.log(error);\n        })\n    }\n}\n\nexport function startLoadingComment() {\n    return (dispatch) => {\n        return database.ref('comments').once('value').then((snapshot) => {\n            let comments = {}\n            snapshot.forEach((childSnapshot) => {\n                comments[childSnapshot.key] = Object.values(childSnapshot.val())\n            })\n            dispatch(loadComments(comments))\n        })\n    }\n}\n\nexport function loadComments(comments) {\n    return {\n        type: 'LOAD_COMMENTS',\n        comments\n    }\n}\n\nexport function removePost(index) {\n    return {\n        type: 'REMOVE_POST',\n        index\n    }\n}\n\nexport function addPost(post) {\n    return {\n        type: 'ADD_POST',\n        post\n    }\n}\n\nexport function addComment(comment, postId) {\n    return {\n        type: 'ADD_COMMENT',\n        comment,\n        postId\n    }\n}\n\nexport function loadPosts(posts) {\n    return {\n        type: 'LOAD_POSTS',\n        posts\n    }\n}\n","\nimport Main from './Main'\nimport {connect} from 'react-redux'\nimport {bindActionCreators} from 'redux'\nimport * as actions from '../redux/actions'\nimport {withRouter} from 'react-router'\nfunction mapStateToProps(state) {\n    return {\n        posts: state.posts,\n        comments: state.comments\n    }\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators(actions, dispatch)\n\n}\n\nconst App = withRouter(connect(mapStateToProps, mapDispatchToProps)(Main))\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/stylesheet.css'\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore, applyMiddleware} from 'redux'\nimport rootReducer from './redux/reducer'\nimport {Provider} from 'react-redux'\nimport App from './Components/App'\nimport thunk from 'redux-thunk'\nimport {database} from './database/config'\n\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk))\n\n\nReactDOM.render(<Provider store={store}><BrowserRouter><App/></BrowserRouter></Provider>, document.getElementById('root'))\n"],"sourceRoot":""}